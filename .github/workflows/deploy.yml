name: farpy-deploy
on: workflow_dispatch

jobs:
  ship:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build tiny public bundle
        shell: bash
        run: |
          set -euo pipefail
          rm -rf public && mkdir -p public
          date -u +"%Y-%m-%dT%H:%M:%SZ" | awk '{print "{\"ok\":true,\"ts\":\""$1"\"}"}' > public/health.json
          echo "farpy public artifacts (auto-built)" > public/README.txt

      - name: Write SSH key from secret
        shell: bash
        run: |
          set -euo pipefail
          umask 077
          mkdir -p ~/.ssh
          # write the *multiline* OpenSSH key exactly as stored in the secret
          printf '%s\n' "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ci
          chmod 600 ~/.ssh/id_ci

      - name: Upload via SFTP (ForceCommand-safe)
        shell: bash
        run: |
          set -euo pipefail
          # ensure target folder (owned by deploy)
          ssh -i ~/.ssh/id_ci -o IdentitiesOnly=yes -o StrictHostKeyChecking=accept-new \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
            'install -d -m 755 -o deploy -g deploy /opt/farpy/public'

          # send the files using SFTP (not SCP)
          {
            echo "cd /opt/farpy/public"
            echo "put -r public/*"
            echo "ls -l"
          } | sftp -i ~/.ssh/id_ci -o IdentitiesOnly=yes -o StrictHostKeyChecking=accept-new \
              "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}"

      - name: Verify over HTTP
        shell: bash
        run: |
          set -euo pipefail
          curl -sS https://api.farpy.com/public/README.txt | head -n 1
          curl -sS https://api.farpy.com/public/health.json | head -n 1
