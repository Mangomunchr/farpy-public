name: farpy-deploy
on: workflow_dispatch

jobs:
  ship:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build tiny public bundle
        run: |
          set -euo pipefail
          rm -rf public && mkdir -p public
          date -u +"%FT%TZ" | awk '{print "{ \"ok\":true, \"ts\":\""$1"\" }"}' > public/health.json
          printf "farpy public artifacts (auto-built)\n" > public/README.txt

      - name: Write CI key and show fingerprint
        shell: bash
        run: |
          set -euo pipefail
          umask 077
          mkdir -p ~/.ssh
          # write the PRIVATE key from the secret verbatim:
          cat > ~/.ssh/id_ci <<'KEY'
${{ secrets.SSH_KEY }}
KEY
          chmod 600 ~/.ssh/id_ci
          echo "ci-fp=$(ssh-keygen -y -f ~/.ssh/id_ci | ssh-keygen -lf -E sha256 - | awk '{print $2}')"

      - name: Try SSH
        shell: bash
        run: |
          set -euo pipefail
          ssh -i ~/.ssh/id_ci -o IdentitiesOnly=yes -o StrictHostKeyChecking=accept-new \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" 'echo ok-from-ci'

      - name: Ensure remote folder & upload
        shell: bash
        run: |
          set -euo pipefail
          ssh -i ~/.ssh/id_ci -o IdentitiesOnly=yes -o StrictHostKeyChecking=accept-new \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
            'install -d -m 755 -o deploy -g deploy /opt/farpy/public'
          scp -i ~/.ssh/id_ci -o IdentitiesOnly=yes -o StrictHostKeyChecking=accept-new \
            -r public/* "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/farpy/public/"
          ssh -i ~/.ssh/id_ci -o IdentitiesOnly=yes -o StrictHostKeyChecking=accept-new \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
            'ls -lah /opt/farpy/public; head -n2 /opt/farpy/public/health.json || true'
